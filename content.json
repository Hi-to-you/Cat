{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Hi-to-you","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Bugku WriteUp","slug":"bugku","date":"2018-10-18T00:29:47.532Z","updated":"2018-10-18T00:33:55.315Z","comments":true,"path":"2018/10/18/bugku/","link":"","permalink":"http://yoursite.com/2018/10/18/bugku/","excerpt":"","text":"矛盾 判断输入的num 如果不是数字的话且为1的话输出flag 但是我们有很多方法让num为1但是不是数字 使用is_numeric遇到%00截断的漏洞,进行构造http://120.24.86.145:8002/get/index1.php?num=1%00get请求爆出flag web3直接查看原码 将下面那一行字符串进行HTML解码 这题难度可能较低，主要是明白这个是什么码，题目做的多的大佬可能一眼就能看出来解法了。 本地包含$_REQUEST对get，post都能接受include“flag.php”说明该文件还存在本地获得hello的值，由于hello为’hello’，所以无论在URL中对hello赋于任何值，都会全盘接受,其中var_dump（）是将a打印到界面中,在根据eval函数的特性(计算后面括号中的表达式)。尝试将flag.php文件直接输出 http://120.24.86.145:8003/?hello=1);print_r(file(&quot;./flag.php&quot;));%23使其原语句为： eval(“var_dump(1);print_r(file(“./flag.php”))”)或者 直接对hello赋值，使hello=file_get_contents(&#39;flag.php&#39;)再查看原码通过构造URL，flag立马爆出来了。 flag在index里这里要注意的是file的关键字，看看php://filter能否将index读出来http://120.24.86.145:8005/post/index.php?file=php://filter/read/convert.base64-encode/resource=index.php从这张页面中，我们会得到一段base64代码将这段base64代码解码得到flag 网站被黑打开网页，首先我们先在URL后面加上一个index.php来判断它是否是PHP网页页面提示说网站存在漏洞，所以我们将御剑开起来扫描扫描后台这时我们发现一个shell.php文件，打开连接是一个webshell，尝试用弱口令登录发现弱口令登录无效，我们使用burp自带字典进行暴力破解得出的密码为hack，将密码输入得到flag 过狗一句话 s=print_r(scandir(&#39;./&#39;)),然后读取flag.txt s=print_r(glob(&quot;*.*&quot;)),然后读取show_source(flag.txt) 使用file_get_contents(flag.txt)读取文件 还有system(&#39;ls&#39;)的读取方法但是这里应该没有权限我们在页面上会发现一个f94lg.txt文件，读取它的内容 眼见非实打开软件，发现是以504B0304开头，说明是zip文件将文件名后缀名更改为zip，将其解压把里面的文件打开看 又一张图片，还单纯嘛？题目给出一张图片。我们把它放到kali里，用binwalk分析一下发现图片里还包含着一张图片，我们用foremost分离出来将图片分离出来，flag就直接在图片上","categories":[{"name":"CTF","slug":"CTF","permalink":"http://yoursite.com/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://yoursite.com/tags/ctf/"}]}]}